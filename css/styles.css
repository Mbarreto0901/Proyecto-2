@import url('https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap');

* {
    box-sizing: border-box;
    margin: 0;
    padding-bottom: 10px;
    scroll-behavior: smooth;
    font-family: 'Lato', sans-serif;
    font-size:  18px;
    text-align: center;
    line-height: 1.2;
}

/* Para quitar los puntos a los items de listas */
ul {
    list-style: none;
}

/* Para que los enlaces hereden el color de texto y no tengan subrayado */
a {
    text-decoration: none;
    color: inherit;
}
div.header-sinfoto{
    display: flex;
    flex-direction: row;
    justify-content: space-around;

}
/* Este max-width es para que el contenido no se "estire" demasiado hacia los costados y
*  el margin: auto; para tenerlo centrado fácilmente ;)
*/
main{
    max-width: 1200px;
    margin: auto;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}
.nav-div_img-logo{
    justify-content: center;
    display: flex;
    
}
img.foto{
    border-radius: 50%;
    max-width: 400px;
    width: 80%;
    height: 200px;
    object-fit: cover;
}
img.iconos{
    width: 60px;
    height: 60px;
}
div.redes{
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    padding-top: 30px;
}
footer{
    background-color: #af599e;
    margin: 10px 0px;
    height: 90px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
}
button{
    background-color: #af599e;
    box-shadow: 5px 2px #ccc;
    border-radius: 50% 0px 50% 0px;
    font-size: 20px;
}
div.fondo-contacto{
    background-color: #af599e4d;
    border-radius: 10px;
    margin: 5px;
}
h1{
    font-size: 36px;
}
p{
    padding-top: 20px;
    padding-bottom: 20px;
}
h2{
    font-size: 28px;
}

/* Recomendaciones! 
*  - Comenzar desde lo más general y luego ir hacia lo mas específico, asignando primero
*    "estilos generales". Una buena idea sería comenzar por el <body> ;)
*
*  - Recuerden que queremos evitar "repetir código", en CSS usando la cualidad de la herencia
*    podemos setear ciertas propiedades en un elemento padre y dejar que sean heredadas (por ejemplo: font-size)
*
*  - Nadie sabe todas las propiedades CSS de memoria, si no saben como hacer algo no lo recuerdan, la respuesta
*    pueden encontrarla buscando en la web algo como "CSS como hacer ... " o "propiedad css para hacer ..."
*
*  - Usen mucho las herramientas para desarrolladores del navegador para ir
*    probando el CSS que escriben, resolver dudas y problemas.
*
*  - Paciencia, resiliencia y creatividad! No se desanimen, las primeras experiencias maquetando con HTML y CSS
*    pueden ser frustrantes, pero estas habilidades se van desarrollando con la experiencia, es como aprender
*    un trabajo manual, hacer una artesanía, tocar un instrumento musical... la práctica es todo!
*/
